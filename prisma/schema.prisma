generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id        String      @id @default(uuid())
  name      String 
  staffs    TeamStaff[]
  
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  deletedAt DateTime?

  @@map("teams")
}

model User {
  id            Int            @id @default(autoincrement())
  username      String?
  email         String         @unique
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Staff {
  id        String      @id @default(uuid())
  name      String
  imageUrl  String?     @map("image_url")
  teams     TeamStaff[]
  
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  deletedAt DateTime?
  
  @@map("staffs")
}

model TeamStaff {
  relation_id  String    @id @default(uuid()) @map("id")
  teamId    String      @map("team_id")
  staffId   String      @map("staff_id")
  
  team      Team        @relation(fields: [teamId], references: [id], onDelete: Cascade)
  staff     Staff       @relation(fields: [staffId], references: [id], onDelete: Cascade)
  
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  deletedAt DateTime?
  
  @@map("team_staffs")
}
